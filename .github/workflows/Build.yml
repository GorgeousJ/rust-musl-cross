on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 2'

name: Build

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env:
          - IMAGE_TAG: aarch64-musl
            TARGET: aarch64-unknown-linux-musl
            OPENSSL_ARCH: linux-aarch64
            RUST_MUSL_MAKE_CONFIG: config.mak
          - IMAGE_TAG: arm-musleabi
            TARGET: arm-unknown-linux-musleabi
            OPENSSL_ARCH: linux-generic32
            RUST_MUSL_MAKE_CONFIG: config.mak.32
          - IMAGE_TAG: arm-musleabihf
            TARGET: arm-unknown-linux-musleabihf
            OPENSSL_ARCH: linux-generic32
            RUST_MUSL_MAKE_CONFIG: config.mak.32
          - IMAGE_TAG: armv5te-musleabi
            TARGET: armv5te-unknown-linux-musleabi
            OPENSSL_ARCH: linux-generic32
            RUST_MUSL_MAKE_CONFIG: config.mak.32
          - IMAGE_TAG: armv7-musleabi
            TARGET: armv7-unknown-linux-musleabi
            OPENSSL_ARCH: linux-generic32
            RUST_MUSL_MAKE_CONFIG: config.mak.32
          - IMAGE_TAG: armv7-musleabihf
            TARGET: armv7-unknown-linux-musleabihf
            OPENSSL_ARCH: linux-generic32
            RUST_MUSL_MAKE_CONFIG: config.mak.32
          - IMAGE_TAG: i586-musl
            TARGET: i586-unknown-linux-musl
            OPENSSL_ARCH: linux-elf
            RUST_MUSL_MAKE_CONFIG: config.mak.32
          - IMAGE_TAG: i686-musl
            TARGET: i686-unknown-linux-musl
            OPENSSL_ARCH: linux-elf
            RUST_MUSL_MAKE_CONFIG: config.mak.32
          - IMAGE_TAG: mips-musl
            TARGET: mips-unknown-linux-musl
            OPENSSL_ARCH: linux-mips32
            RUST_MUSL_MAKE_CONFIG: config.mak.32
          # - IMAGE_TAG: mips64-muslabi64
          #   TARGET: mips64-unknown-linux-muslabi64
          #   OPENSSL_ARCH: linux64-mips64
          # - IMAGE_TAG: mips64el-muslabi64
          #   TARGET: mips64el-unknown-linux-muslabi64
          #   OPENSSL_ARCH: linux64-mips64
          - IMAGE_TAG: mipsel-musl
            TARGET: mipsel-unknown-linux-musl
            OPENSSL_ARCH: linux-mips32
            RUST_MUSL_MAKE_CONFIG: config.mak.32
          - IMAGE_TAG: x86_64-musl
            TARGET: x86_64-unknown-linux-musl
            OPENSSL_ARCH: linux-x86_64
            RUST_MUSL_MAKE_CONFIG: config.mak
    env: ${{ matrix.env }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          build-args: |
            TARGET=${{ matrix.env.TARGET }}
            OPENSSL_ARCH=${{ matrix.env.OPENSSL_ARCH }}
            RUST_MUSL_MAKE_CONFIG=${{ matrix.env.RUST_MUSL_MAKE_CONFIG }}
          tags: messense/rust-musl-cross:${{ matrix.env.IMAGE_TAG }}
          load: true
      - name: Test Docker cargo build
        run: |
          docker run --rm \
            -e CFLAGS_armv7_unknown_linux_musleabihf='-mfpu=vfpv3-d16' \
            -v "$(pwd)/tests":/home/rust/src \
            messense/rust-musl-cross:$IMAGE_TAG cargo build
      - name: Push Docker image
        if: github.ref == 'refs/heads/master'
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} && docker push messense/rust-musl-cross:$IMAGE_TAG
