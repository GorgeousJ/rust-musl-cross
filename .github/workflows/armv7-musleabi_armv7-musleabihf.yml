on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 0 * * 2'

name: Build - armv7-musleabi,armv7-musleabihf

jobs:
  start-runner:
    name: Start self-hosted ECS runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ecs-runner.outputs.label }}
      ecs-instance-id: ${{ steps.start-ecs-runner.outputs.ecs-instance-id }}
    steps:
      - uses: actions/checkout@v2
      - name: Start ECS runner
        id: start-ecs-runner
        uses: messense/huaweicloud-github-runner@main
        with:
          mode: start
          github-token: ${{ secrets.GH_PAT }}
          huawei-cloud-ak: ${{ secrets.HUAWEI_CLOUD_AK }}
          huawei-cloud-sk: ${{ secrets.HUAWEI_CLOUD_SK }}
          project-id: ${{ secrets.PROJECT_ID }}
          availability-zone: ap-southeast-1b
          ecs-image-id: 3021e45a-5c5b-47ae-920d-2a240d3f26d9
          ecs-instance-type: kc1.large.2
          vpc-id: ${{ secrets.VPC_ID }}
          subnet-id: ${{ secrets.SUBNET_ID }}
          security-group-id: ${{ secrets.SECURITY_GROUP_ID }}

  build:
    name: Build - ${{ matrix.os.arch }} - ${{ matrix.env.IMAGE_TAG }}
    needs: start-runner
    runs-on: ${{ matrix.os.label }}
    strategy:
      matrix:
        os:
          - arch: 'amd64'
            label: ['ubuntu-latest']
          - arch: 'arm64'
            label: ${{ needs.start-runner.outputs.label }}
        env: [{"IMAGE_TAG": "armv7-musleabi", "TARGET": "armv7-unknown-linux-musleabi", "RUST_MUSL_MAKE_CONFIG": "config.mak.32", "TOOLCHAIN": "stable"}, {"IMAGE_TAG": "armv7-musleabihf", "TARGET": "armv7-unknown-linux-musleabihf", "RUST_MUSL_MAKE_CONFIG": "config.mak.32", "TOOLCHAIN": "stable"}]
    env: ${{ matrix.env }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.os.arch }}-${{ matrix.env.TARGET }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os.arch }}-${{ matrix.env.TARGET }}-buildx-
      - name: Clean Docker cache
        if: "contains(github.event.head_commit.message, '[clean cache]')"
        continue-on-error: true
        run: |
          rm -rf /tmp/.buildx-cache
      - name: docker build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/${{ matrix.os.arch }}
          build-args: |
            TARGET=${{ matrix.env.TARGET }}
            RUST_MUSL_MAKE_CONFIG=${{ matrix.env.RUST_MUSL_MAKE_CONFIG }}
            TOOLCHAIN=${{ matrix.env.TOOLCHAIN }}
          tags: messense/rust-musl-cross:${{ matrix.env.IMAGE_TAG }}-${{ matrix.os.arch }}
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          # Temp fix
          # https://github.com/docker/build-push-action/issues/252
          # https://github.com/moby/buildkit/issues/1896
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Test Docker cargo build
        if: ${{ !startsWith(matrix.env.TARGET, 'armv5te') }}
        run: |
          docker run --rm \
            -v "$(pwd)/tests":/home/rust/src \
            messense/rust-musl-cross:$IMAGE_TAG-${{ matrix.os.arch }} bash -c "cargo build; cargo clean"
      - name: Build and push multiarch image
        if: github.ref == 'refs/heads/master'
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push messense/rust-musl-cross:$IMAGE_TAG-${{ matrix.os.arch }}

          echo "image: messense/rust-musl-cross:$IMAGE_TAG
          manifests:
            - image: messense/rust-musl-cross:$IMAGE_TAG-amd64
              platform:
                architecture: amd64
                os: linux
            - image: messense/rust-musl-cross:$IMAGE_TAG-arm64
              platform:
                architecture: arm64
                os: linux
          " > manifest.yaml

          curl -sqL -o manifest-tool https://github.com/estesp/manifest-tool/releases/download/v1.0.3/manifest-tool-linux-${{ matrix.os.arch }}
          chmod +x manifest-tool
          ./manifest-tool push from-spec manifest.yaml

  stop-runner:
    name: Stop self-hosted ECS runner
    needs: [start-runner, build]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v2
      - name: Stop ECS runner
        if: ${{ needs.start-runner.outputs.ecs-instance-id }}
        uses: messense/huaweicloud-github-runner@main
        with:
          mode: stop
          github-token: ${{ secrets.GH_PAT }}
          huawei-cloud-ak: ${{ secrets.HUAWEI_CLOUD_AK }}
          huawei-cloud-sk: ${{ secrets.HUAWEI_CLOUD_SK }}
          project-id: ${{ secrets.PROJECT_ID }}
          availability-zone: ap-southeast-1b
          label: ${{ needs.start-runner.outputs.label }}
          ecs-instance-id: ${{ needs.start-runner.outputs.ecs-instance-id }}
